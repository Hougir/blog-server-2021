<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.blog</groupId>
    <artifactId>blog-server-2021</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <name>blog-server-2021</name>
    <description>blog-server-2021</description>
    <modules>
        <module>common</module>
        <module>web</module>
    </modules>




    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>

        <spring-boot.version>2.2.1.RELEASE</spring-boot.version>
        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>

        <mysql-connector-java.version>8.0.12</mysql-connector-java.version>
        <alibaba-druid-starter.version>1.1.10</alibaba-druid-starter.version>
        <alibaba-fastjson.version>1.2.62</alibaba-fastjson.version>
        <aliyun-sdk-oss.version>3.5.0</aliyun-sdk-oss.version>

        <lombok.version>1.18.4</lombok.version>
        <commons-lang3.version>3.4</commons-lang3.version>
        <commons.beanutils.version>1.8.3</commons.beanutils.version>
        <commons.io.version>2.4</commons.io.version>
        <commons.codec.version>1.6</commons.codec.version>
        <commons-fileupload.version>1.3.1</commons-fileupload.version>

        <swagger2.version>2.9.2</swagger2.version>
        <swagger-annotations.version>1.5.21</swagger-annotations.version>
        <swagger-models.version>1.5.21</swagger-models.version>

        <kaptcha.version>2.3.2</kaptcha.version>
        <mapstruct.version>1.2.0.Final</mapstruct.version>

        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <spring-boot-maven-plugin.version>2.1.0.RELEASE</spring-boot-maven-plugin.version>

        <open-model.version>1.8.0</open-model.version>
        <openapi-sdk.version>1.5.1</openapi-sdk.version>
        <KTToolkit.version>3.0.0.2</KTToolkit.version>
        <KTVO.version>3.0.0.2</KTVO.version>
        <ra-toolkit.version>3.5.7.2</ra-toolkit.version>
        <SealClient.version>3.2.4.5</SealClient.version>
        <bcpkix-jdk15on.version>1.64</bcpkix-jdk15on.version>
        <bcprov-jdk15on.version>1.64</bcprov-jdk15on.version>
        <itext-asian.version>5.2.0</itext-asian.version>
        <itextpdf.version>5.5.13</itextpdf.version>
        <xmlworker.version>5.5.13</xmlworker.version>
        <freemarker.version>2.3.25-incubating</freemarker.version>

        <docker.plugin.version>1.0.0</docker.plugin.version>
        <docker.image.prefix>saas-market</docker.image.prefix>

        <!--<docker.host>http://106.14.36.118:2375</docker.host>-->

        <!-- Sonar Start -->
        <sonar.scm.provider>git</sonar.scm.provider>
        <sonar.scm.disabled>true</sonar.scm.disabled>
        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
        <!-- Set Jacoco Configuration Start -->
        <!-- 指定代码覆盖率工具 -->
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <!-- 指定exec二进制文件存放路径 -->
        <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
        <!-- 以下属性可选择性加，当然也可以不加 -->
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportMissing.force.zero>false</sonar.jacoco.reportMissing.force.zero>
        <!-- Set Jacoco Configuration End -->
        <!-- Sonar End -->

        <build_profile></build_profile>
    </properties>

    <!--<repositories>-->
    <!--<repository>-->
    <!--<id>local-repo</id>-->
    <!--<name>local repository</name>-->
    <!--<url>http://106.14.238.126:8081/nexus/content/groups/public/</url>-->
    <!--<releases>-->
    <!--<enabled>true</enabled>-->
    <!--</releases>-->
    <!--<snapshots>-->
    <!--<enabled>true</enabled>-->
    <!--</snapshots>-->
    <!--</repository>-->
    <!--</repositories>-->

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
            <version>${lombok.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20190722</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>2.10.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${alibaba-druid-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${alibaba-fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-sdk-oss.version}</version>
            </dependency>

            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-s3</artifactId>
                <version>1.11.95</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-sts</artifactId>
                <version>1.11.95</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-bean-validators</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger-models.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.penggle</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>

            <!-- Apache commons。 -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons.beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons.codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>2.6.0</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>20.0</version>
            </dependency>

            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>

            <dependency>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-maven-plugin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.3</version>
                <configuration>
                    <!--指定生成.exec文件的存放位置-->
                    <destFile>${sonar.jacoco.reportPath}</destFile>
                    <!--Jacoco是根据.exec文件生成最终的报告，所以需指定.exec的存放路径-->
                    <dataFile>${sonar.jacoco.reportPath}</dataFile>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>
